/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MyFriends as PrismaMyFriends } from "@prisma/client";

export class MyFriendsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MyFriendsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.myFriends.count(args);
  }

  async myFriendsItems(
    args: Prisma.MyFriendsFindManyArgs
  ): Promise<PrismaMyFriends[]> {
    return this.prisma.myFriends.findMany(args);
  }
  async myFriends(
    args: Prisma.MyFriendsFindUniqueArgs
  ): Promise<PrismaMyFriends | null> {
    return this.prisma.myFriends.findUnique(args);
  }
  async createMyFriends(
    args: Prisma.MyFriendsCreateArgs
  ): Promise<PrismaMyFriends> {
    return this.prisma.myFriends.create(args);
  }
  async updateMyFriends(
    args: Prisma.MyFriendsUpdateArgs
  ): Promise<PrismaMyFriends> {
    return this.prisma.myFriends.update(args);
  }
  async deleteMyFriends(
    args: Prisma.MyFriendsDeleteArgs
  ): Promise<PrismaMyFriends> {
    return this.prisma.myFriends.delete(args);
  }
}
