/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PrivateChat as PrismaPrivateChat } from "@prisma/client";

export class PrivateChatServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PrivateChatCountArgs, "select">
  ): Promise<number> {
    return this.prisma.privateChat.count(args);
  }

  async privateChats(
    args: Prisma.PrivateChatFindManyArgs
  ): Promise<PrismaPrivateChat[]> {
    return this.prisma.privateChat.findMany(args);
  }
  async privateChat(
    args: Prisma.PrivateChatFindUniqueArgs
  ): Promise<PrismaPrivateChat | null> {
    return this.prisma.privateChat.findUnique(args);
  }
  async createPrivateChat(
    args: Prisma.PrivateChatCreateArgs
  ): Promise<PrismaPrivateChat> {
    return this.prisma.privateChat.create(args);
  }
  async updatePrivateChat(
    args: Prisma.PrivateChatUpdateArgs
  ): Promise<PrismaPrivateChat> {
    return this.prisma.privateChat.update(args);
  }
  async deletePrivateChat(
    args: Prisma.PrivateChatDeleteArgs
  ): Promise<PrismaPrivateChat> {
    return this.prisma.privateChat.delete(args);
  }
}
