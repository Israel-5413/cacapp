/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, StudyGroup as PrismaStudyGroup } from "@prisma/client";

export class StudyGroupServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StudyGroupCountArgs, "select">
  ): Promise<number> {
    return this.prisma.studyGroup.count(args);
  }

  async studyGroups(
    args: Prisma.StudyGroupFindManyArgs
  ): Promise<PrismaStudyGroup[]> {
    return this.prisma.studyGroup.findMany(args);
  }
  async studyGroup(
    args: Prisma.StudyGroupFindUniqueArgs
  ): Promise<PrismaStudyGroup | null> {
    return this.prisma.studyGroup.findUnique(args);
  }
  async createStudyGroup(
    args: Prisma.StudyGroupCreateArgs
  ): Promise<PrismaStudyGroup> {
    return this.prisma.studyGroup.create(args);
  }
  async updateStudyGroup(
    args: Prisma.StudyGroupUpdateArgs
  ): Promise<PrismaStudyGroup> {
    return this.prisma.studyGroup.update(args);
  }
  async deleteStudyGroup(
    args: Prisma.StudyGroupDeleteArgs
  ): Promise<PrismaStudyGroup> {
    return this.prisma.studyGroup.delete(args);
  }
}
